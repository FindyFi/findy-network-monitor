name: Deploy Findy network monitor to Test Environment

on:
  push:
    branches: [test]

jobs:
  docker_build_push_acr:
    name: "Docker Build and Push to ACR"
    runs-on: ubuntu-latest
    environment: test

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Login to Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # - name: Build the indy node monitor image and push it to ACR
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./fetch-validator-status
      #     push: true
      #     tags: ${{ secrets.ACR_REGISTRY }}/indy-node-monitor-test:latest
      #     file: ./fetch-validator-status/Dockerfile

      # - name: Build the telegraf image and push it to ACR
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     build-args: |
      #       "TELEGRAF_TAG=latest"
      #     push: true
      #     tags: ${{ secrets.ACR_REGISTRY }}/telegraf-test:latest
      #     file: ./images/telegraf/latest/Dockerfile

      - name: Build the influxdb image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./
          build-args: |
            "INFLUXDB_TAG=1.8"
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/influxdb-test:latest
          file: ./images/influxdb/latest/Dockerfile

      - name: Build the prometheus image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/prometheus-test:latest
          images: prom/prometheus

      - name: Build the alertmanager image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/alertmanager-test:latest
          images: prom/alertmanager

      - name: Build the grafana image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./
          build-args: |
            "GRAFANA_TAG=latest"
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/grafana-test:latest
          file: ./images/grafana/Dockerfile

      - name: "Deploy Indy Node Monitor to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: $ ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: $ ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.ACR_REGISTRY }}/indy-node-monitor-test:latest
          registry-login-server: ${{ secrets.ACR_REGISTRY }}
          registry-username: ${{ secrets.ACR_USERNAME }}
          registry-password: ${{ secrets.ACR_PASSWORD }}
          name: indy-node-monitor-test
          ${{ secrets.LOCATION }}: ${{ secrets.LOCATION }}

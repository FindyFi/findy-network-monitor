name: Deploy Findy network monitor to Test Environment

on:
  push:
    branches: [test]

env:
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  LOCATION: ${{ secrets.LOCATION }}
  ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  docker_build_push_acr:
    name: "Docker Build and Push to ACR"
    runs-on: ubuntu-latest
    environment: test

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Login to Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: $ACR_REGISTRY
          username: $ACR_USERNAME
          password: $ACR_PASSWORD

      - name: Build the indy node monitor image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./fetch-validator-status
          push: true
          tags: $ACR_REGISTRY/indy-node-monitor-test:latest
          file: Dockerfile

      - name: Build the telegraf image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./images/telegraf/latest
          push: true
          tags: $ACR_REGISTRY/telegraf-test:latest
          file: Dockerfile

      - name: Build the influxdb image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./images/influxdb/latest
          push: true
          tags: $ACR_REGISTRY/influxdb-test:latest
          file: Dockerfile

      - name: Build the prometheus image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: $ACR_REGISTRY/prometheus-test:latest
          images: prom/prometheus

      - name: Build the alertmanager image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: $ACR_REGISTRY/alertmanager-test:latest
          images: prom/alertmanager

      - name: Build the grafana image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          context: ./images/grafana
          push: true
          tags: $ACR_REGISTRY/grafana-test:latest
          file: Dockerfile

      - name: "Deploy Indy Node Monitor to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: $RESOURCE_GROUP
          dns-name-label: $RESOURCE_GROUP${{ github.run_number }}
          image: $ACR_REGISTRY/indy-node-monitor-test:latest
          registry-login-server: $ACR_REGISTRY
          registry-username: $ACR_USERNAME
          registry-password: $ACR_PASSWORD
          name: indy-node-monitor-test
          location: $LOCATION
